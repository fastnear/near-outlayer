# HTTP Server
HOST=0.0.0.0
PORT=8080

# PostgreSQL (use container name in Docker Compose)
DATABASE_URL=postgres://postgres:postgres@postgres:5432/offchainvm
DB_POOL_SIZE=50

# Redis (use container name in Docker Compose)
REDIS_URL=redis://redis:6379
REDIS_TASK_QUEUE=offchainvm:tasks

# WASM Cache
# Inside container: /var/offchainvm/wasm (mounted as volume)
WASM_CACHE_DIR=/var/offchainvm/wasm
WASM_CACHE_MAX_SIZE_GB=50
LRU_EVICTION_CHECK_INTERVAL_SECONDS=3600

# Authentication
REQUIRE_AUTH=true

# Timeouts
TASK_POLL_TIMEOUT_SECONDS=60
LOCK_DEFAULT_TTL_SECONDS=300

# Logging
RUST_LOG=offchainvm_coordinator=debug,tower_http=debug

# CORS - allowed origins (comma-separated)
# For development: http://localhost:3000
# For production: https://outlayer.fastnear.com
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://outlayer.fastnear.com

# Keystore integration (optional)
# Docker mode: Access keystore running on host machine
# - macOS/Windows: Use host.docker.internal:8081 (works natively)
# - Linux: Use 172.17.0.1:8081 (Docker bridge IP)
#   IMPORTANT for Linux: Add UFW firewall rule:
#   sudo ufw allow from 172.16.0.0/12 to any port 8081
#   sudo ufw reload
# Local mode (coordinator outside Docker): Use http://localhost:8081
KEYSTORE_BASE_URL=http://host.docker.internal:8081

# NEAR configuration
NEAR_EXPLORER_URL=https://testnet.nearblocks.io
OFFCHAINVM_CONTRACT_ID=outlayer.testnet

KEYSTORE_AUTH_TOKEN=your-keystore-token-here
